---
// CharacterDetail.astro
import BreadCrubms from "@/components/unicode/BreadCrubms.astro";
import Sidebar from "./unicode/SideBar.astro";
import { useTranslations } from "../i18n/utils";
import RelatedUnicodes from "./unicode/RelatedUnicode.astro";
import { unicodeData } from "@/data/unicodeData";

const { char, lang } = Astro.props;
const t = useTranslations(lang);

const displayName = char.name?.[lang] ?? char.name?.["en"] ?? "Unknown";
const displayDesc = char.description?.[lang] ?? char.description?.["en"] ?? "";
const displayCategory = char.category ?? "N/A";
const displayBrowserSupport = char.browserSupport ?? "browsersupportFallback";

const breadcrumbItems = [
    { label: t("breadcrumbs.unicode"), href: "/unicode/" },
    { label: displayName, href: "#" },
];
---
<div class="container max-w-7xl mx-auto px-6 py-4">
    <BreadCrubms items={breadcrumbItems} />
    <article class="text-black">
        <div class="grid grid-cols-1 xl:grid-cols-[1fr,300px] gap-6">
            <div class="min-w-0">
                <div class="mx-auto space-y-6">
                    <div
                        class="rounded-lg border border-gray-200 p-6 shadow bg-white"
                    >
                        <div
                            class="flex flex-col md:flex-row md:items-center md:justify-between"
                        >
                            <div>
                                <h1
                                    class="text-3xl font-bold text-gray-900 mb-2"
                                >
                                    {displayName}
                                </h1>
                                <p class="text-lg text-gray-700">
                                    {displayDesc}
                                </p>
                            </div>
                            <div class="mt-4 md:mt-0">
                                <span
                                    class="text-xl font-mono bg-gray-800 px-3 py-1 rounded-lg text-white"
                                >
                                    {char.code.toUpperCase()}
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div
                            class="bg-white rounded-lg border border-gray-200 p-6 shadow"
                        >
                            <h2
                                class="text-2xl font-semibold text-gray-900 mb-4"
                            >
                                {t("visual_preview")}
                            </h2>
                            <div
                                class="bg-gray-100 p-6 rounded-lg text-center border shadow-sm"
                            >
                                <div
                                    class="text-5xl mb-2 text-gray-900 font-mono"
                                >
                                    {char.symbol}
                                </div>
                                <p class="text-gray-500 text-md md:text-lg">
                                    {t("visual_preview_description")}
                                </p>
                            </div>
                        </div>

                        <div
                            class="rounded-lg border border-gray-200 p-6 shadow bg-white"
                        >
                            <h2
                                class="text-2xl font-semibold text-gray-900 mb-4"
                            >
                                {t("copy_options")}
                            </h2>
                            <div class="space-y-4">
                                <button
                                    data-text={`&#x${char.code.slice(2)};`}
                                    data-type="HTML Entity"
                                    onclick="window.handleCopy(event, this)"
                                    class="w-full px-3 py-2 bg-gray-900 text-white rounded-lg hover:bg-gray-900 transition flex items-center justify-between"
                                >
                                    <span class="text-lg font-bold"
                                        >{t("copy_character")}</span
                                    >
                                    <div class="flex items-center">
                                        <code
                                            class="bg-gray-600 px-2 py-1 rounded"
                                            >&#x{char.code.slice(2)};</code
                                        >
                                        <span
                                            class="check-icon hidden ml-2"
                                        >
                                            <svg
                                                class="w-5 h-5 text-green-500"
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                            >
                                                <path
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                    stroke-width="2"
                                                    d="M5 13l4 4L19 7"
                                                ></path>
                                            </svg>
                                        </span>
                                    </div>
                                </button>
                                <button
                                    data-text={char.code}
                                    data-type="Unicode"
                                    onclick="window.handleCopy(event, this)"
                                    class="w-full px-3 py-2 bg-gray-100 text-gray-900 hover:text-white rounded-lg hover:bg-gray-600 transition flex items-center justify-between border border-gray-200 hover:border-gray-800"
                                >
                                    <span class="text-lg font-bold"
                                        >{t("copy_unicode")}</span
                                    >
                                    <div class="flex items-center">
                                        <code
                                            class="bg-gray-300 px-2 py-1 rounded text-gray-900"
                                            >{char.code}</code
                                        >
                                        <span
                                            class="check-icon hidden ml-2"
                                        >
                                            <svg
                                                class="w-5 h-5 text-green-500"
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                            >
                                                <path
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                    stroke-width="2"
                                                    d="M5 13l4 4L19 7"
                                                ></path>
                                            </svg>
                                        </span>
                                    </div>
                                </button>
                                <button
                                    data-text={char.symbol}
                                    data-type="Character"
                                    onclick="window.handleCopy(event, this)"
                                    class="w-full px-3 py-2 bg-gray-100 text-gray-900 hover:text-white rounded-lg hover:bg-gray-600 transition flex items-center justify-between border border-gray-200 hover:border-gray-800"
                                >
                                    <span class="text-lg font-bold"
                                        >{t("copy_html_entity")}</span
                                    >
                                    <div class="flex items-center">
                                        <code
                                            class="bg-gray-300 px-2 py-1 rounded text-gray-900"
                                            >{char.code}</code
                                        >
                                        <span
                                            class="check-icon hidden ml-2"
                                        >
                                            <svg
                                                class="w-5 h-5 text-green-500"
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                            >
                                                <path
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                    stroke-width="2"
                                                    d="M5 13l4 4L19 7"
                                                ></path>
                                            </svg>
                                        </span>
                                    </div>
                                </button>
                            </div>
                        </div>
                    </div>

                    <section
                        class="border border-gray-200 rounded-lg p-6 shadow-md bg-white"
                    >
                        <h2
                            class="text-2xl font-semibold text-gray-900 mb-4"
                        >
                            {t("how_to_use")}
                        </h2>
                        <div class="mb-3">
                            <h3
                                class="text-xl font-medium text-gray-800 mb-2"
                            >
                                {t("in_html")}
                            </h3>
                            <pre
                                class="bg-gray-100 p-4 rounded-lg text-md overflow-x-auto border">
                {`<span>&#${char.decimal};</span>`}
            </pre>
                        </div>
                        <div class="mb-3">
                            <h3
                                class="text-xl font-medium text-gray-800 mb-2"
                            >
                                {t("in_css")}
                            </h3>
                            <pre
                                class="bg-gray-100 p-4 rounded-lg text-md overflow-x-auto border">
                {`content: "\\${char.code.toUpperCase()}";`}
            </pre>
                        </div>
                        <div class="mb-3">
                            <h3
                                class="text-xl font-medium text-gray-800 mb-2"
                            >
                                {t("in_javascript")}
                            </h3>
                            <pre
                                class="bg-gray-100 p-4 rounded-lg text-md overflow-x-auto border">
                {`const char = String.fromCodePoint(0x${char.code.toUpperCase()});`}
            </pre>
                        </div>
                    </section>

                    <section
                        class="border border-gray-200 rounded-lg p-6 shadow-md bg-white"
                    >
                        <h2
                            class="text-2xl font-semibold text-gray-900 mb-4"
                        >
                            {t("additional_information")}
                        </h2>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                            <div class="bg-gray-100 p-4 rounded-lg border">
                                <h3
                                    class="text-xl font-medium text-gray-800 mb-2"
                                >
                                    {t("category")}
                                </h3>
                                <p class="text-md text-gray-600">
                                    {char.category}
                                </p>
                            </div>
                            <div class="bg-gray-100 p-4 rounded-lg border">
                                <h3
                                    class="text-xl font-medium text-gray-800 mb-2"
                                >
                                    {t("browser_support")}
                                </h3>
                                <p class="text-md text-gray-600">
                                    {displayBrowserSupport}
                                </p>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
            <aside class="xl:block">
                <Sidebar />
            </aside>
        </div>
    </article>
    <!-- Related Unicode Characters -->
    <div class="mt-8">
        <RelatedUnicodes currentChar={char} allChars={unicodeData} />
    </div>
</div>

<script type="module">
    window.handleCopy = async function (event, btn) {
        const text = btn.getAttribute("data-text");
        try {
            await navigator.clipboard.writeText(text);
            const icon = btn.querySelector(".check-icon");
            if (icon) {
                icon.classList.remove("hidden");
                setTimeout(() => {
                    icon.classList.add("hidden");
                }, 2000);
            }
        } catch (err) {
            console.error("Failed to copy:", err);
        }
    };
</script>
<!-- Automatically show related characters -->