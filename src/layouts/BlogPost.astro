---
import "@/styles/global.css";
import "@fontsource/kanit";
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';

export interface Props {
	title: string;
	description?: string;
	ogType?: 'website' | 'article';
	ogImage?: string;
	publishedTime?: string;
	modifiedTime?: string;
	canonicalUrl?: string;
}

const { 
	title, 
	description = 'A modern blog powered by WordPress and Astro',
	ogType = 'website',
	ogImage,
	publishedTime,
	modifiedTime,
	canonicalUrl
} = Astro.props;

const siteUrl = import.meta.env.PUBLIC_SITE_URL || Astro.site;
const fullCanonicalUrl = canonicalUrl || `${siteUrl}${Astro.url.pathname}`;
const fullOgImage = ogImage || `${siteUrl}/og-default.jpg`;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<link rel="canonical" href={fullCanonicalUrl} />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content={ogType} />
		<meta property="og:url" content={fullCanonicalUrl} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={fullOgImage} />
		<meta property="og:site_name" content="WordPress Astro Blog" />
		
		{ogType === 'article' && publishedTime && (
			<meta property="article:published_time" content={publishedTime} />
		)}
		{ogType === 'article' && modifiedTime && (
			<meta property="article:modified_time" content={modifiedTime} />
		)}
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={fullCanonicalUrl} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={fullOgImage} />
		
		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		
		<!-- Preconnect to WordPress API -->
		{import.meta.env.PUBLIC_WP_API_URL && (
			<link rel="preconnect" href={new URL(import.meta.env.PUBLIC_WP_API_URL).origin} />
		)}
		
		<!-- Security Headers -->
		<meta http-equiv="X-Content-Type-Options" content="nosniff" />
		<meta http-equiv="X-Frame-Options" content="DENY" />
		<meta http-equiv="X-XSS-Protection" content="1; mode=block" />
		<meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin" />
	</head>
	<body class="min-h-screen flex flex-col mx-auto">
		<Header />
		<main class="fade-in">
			<slot />
		</main>
		<Footer />
	</body>
</html>

<style>
	/* CSS Reset */
	*, *::before, *::after {
		box-sizing: border-box;
	}
	
	* {
		margin: 0 auto;
	}
	
	body {
		line-height: 1.5;
		-webkit-font-smoothing: antialiased;
	}
	
	img, picture, video, canvas, svg {
		display: block;
		max-width: 100%;
	}
	
	input, button, textarea, select {
		font: inherit;
	}
	
	p, h1, h2, h3, h4, h5, h6 {
		overflow-wrap: break-word;
	}
	
	/* Base Styles */
	html {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
		scroll-behavior: smooth;
	}
	
	body {
		color: #333;
		background-color: #fff;
	}
	
	a {
		color: #000000;
		text-decoration: none;
	}
	
	a:hover {
		text-decoration: underline;
	}
	
	code {
		font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas', 'Courier New', monospace;
	}
	
	/* Focus styles for accessibility */
	:focus-visible {
		outline: 2px solid #000000;
		outline-offset: 2px;
	}
	
	/* Loading animation */
	@keyframes fadeIn {
		from { opacity: 0; transform: translateY(20px); }
		to { opacity: 1; transform: translateY(0); }
	}
	
	.fade-in {
		animation: fadeIn 0.6s ease-out;
	}
</style>
